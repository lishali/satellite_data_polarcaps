EEEEEEEEEEEEEEEEEEEEEERRRRRRRRRRRRRRRRR   RRRRRRRRRRRRRRRRR                  AAA         TTTTTTTTTTTTTTTTTTTTTTT         AAA               
E::::::::::::::::::::ER::::::::::::::::R  R::::::::::::::::R                A:::A        T:::::::::::::::::::::T        A:::A              
E::::::::::::::::::::ER::::::RRRRRR:::::R R::::::RRRRRR:::::R              A:::::A       T:::::::::::::::::::::T       A:::::A             
EE::::::EEEEEEEEE::::ERR:::::R     R:::::RRR:::::R     R:::::R            A:::::::A      T:::::TT:::::::TT:::::T      A:::::::A            
  E:::::E       EEEEEE  R::::R     R:::::R  R::::R     R:::::R           A:::::::::A     TTTTTT  T:::::T  TTTTTT     A:::::::::A           
  E:::::E               R::::R     R:::::R  R::::R     R:::::R          A:::::A:::::A            T:::::T            A:::::A:::::A          
  E::::::EEEEEEEEEE     R::::RRRRRR:::::R   R::::RRRRRR:::::R          A:::::A A:::::A           T:::::T           A:::::A A:::::A         
  E:::::::::::::::E     R:::::::::::::RR    R:::::::::::::RR          A:::::A   A:::::A          T:::::T          A:::::A   A:::::A        
  E:::::::::::::::E     R::::RRRRRR:::::R   R::::RRRRRR:::::R        A:::::A     A:::::A         T:::::T         A:::::A     A:::::A       
  E::::::EEEEEEEEEE     R::::R     R:::::R  R::::R     R:::::R      A:::::AAAAAAAAA:::::A        T:::::T        A:::::AAAAAAAAA:::::A      
  E:::::E               R::::R     R:::::R  R::::R     R:::::R     A:::::::::::::::::::::A       T:::::T       A:::::::::::::::::::::A     
  E:::::E       EEEEEE  R::::R     R:::::R  R::::R     R:::::R    A:::::AAAAAAAAAAAAA:::::A      T:::::T      A:::::AAAAAAAAAAAAA:::::A    
EE::::::EEEEEEEE:::::ERR:::::R     R:::::RRR:::::R     R:::::R   A:::::A             A:::::A   TT:::::::TT   A:::::A             A:::::A   
E::::::::::::::::::::ER::::::R     R:::::RR::::::R     R:::::R  A:::::A               A:::::A  T:::::::::T  A:::::A               A:::::A  
E::::::::::::::::::::ER::::::R     R:::::RR::::::R     R:::::R A:::::A                 A:::::A T:::::::::T A:::::A                 A:::::A 
EEEEEEEEEEEEEEEEEEEEEERRRRRRRR     RRRRRRRRRRRRRRR     RRRRRRRAAAAAAA                   AAAAAAATTTTTTTTTTTAAAAAAA                   AAAAAA
                                                               
####################################################################################################################
####################################################################################################################

  _     ___   ____ ___ _____ 
 | |   / _ \ / ___|_ _|_   _|
 | |  | | | | |  _ | |  | |  
 | |__| |_| | |_| || |  | |  
 |_____\___/ \____|___| |_| 

There’s a typo in line 214 of Logit.R where it reads LogitProbabilites instead of LogitProbabilities in the filename 
argument of ggsave so changing that should resolve that issue.

ggsave(filename = "LogitProbabilites.png", plot=images.prob,
	path="../figures", height=3, width=8)

LogitROC.png is the plot given by (line 129 of Logit.R)
plot(roc.logit, main = "ROC Curve, Logit Trained via 12-Fold CV”).

threshold.png is the plot generated by this section of Logit.R (line 183)
plot(c(1:100)/100,
	error.vec, xlab = 'Threshold',
	ylab = 'Misclassification Rate',
	main = 'Choice of Logit Threshold')


For LogitROC.png and threshold.png you’ll just have to save them yourself and then it should work.

####################################################################################################################
####################################################################################################################
  ____      _    _   _ ____   ___  __  __     _____ ___  ____  _____ ____ _____ 
 |  _ \    / \  | \ | |  _ \ / _ \|  \/  |   |  ___/ _ \|  _ \| ____/ ___|_   _|
 | |_) |  / _ \ |  \| | | | | | | | |\/| |   | |_ | | | | |_) |  _| \___ \ | |  
 |  _ <  / ___ \| |\  | |_| | |_| | |  | |   |  _|| |_| |  _ <| |___ ___) || |  
 |_| \_\/_/   \_\_| \_|____/ \___/|_|  |_|   |_|   \___/|_| \_\_____|____/ |_| 

AUCconverge.png is written in the code to be AUCconverge.pdf, so once that is changed in the latex file to 'pdf' 
it should compile. 

ROC_converge_shuffle1.pdf and ROC_converge_shuffle2.pdf have the opposite problem and were saved as 'png' in the code, 
so in the latex file, they should say 'png' instead of 'pdf'.

The code to generate the plots  ROC_converge_shuffle1.png & ROC_converge_shuffle2.png
are not calling the correct functions. Line 776 in random forest code, should read:
    filename <- "ROC_converge_shuffle1.csv"
    
    plot.roc.shuffle1(filename)
    
    filename <- "ROC_converge_shuffle2.csv"
    
    plot.roc.shuffle2(filename)

classification_image3.png was named in the code as classificaiton_image8.png, so if you replace 
classification_image3.png with classification_image8.png the tex file will find it.  

Finally, same problem with NDAI_image3.png, it is named NDAI_image8.png in the code (an artifact of a counter I choose 
in a forloop).  


####################################################################################################################
####################################################################################################################

  _____ ____    _    
 | ____|  _ \  / \   
 |  _| | | | |/ _ \  
 | |___| |_| / ___ \ 
 |_____|____/_/   \_\
                     
During our code clean-up phase we overzealously deleted a chunk of code for the EDA section that produces
NDAI, SD, and CORR 1,2,3.  Here is the original code. Save this into the Rfiles folder as the output pathing
makes use of the directory structure.  As usual, remember to set the working directory.

library(dplyr)
library(ggplot2)

setwd(file.path("/Users/LishaLi/Desktop/215A/Lab4/work"))
# Get the data for three images

image1 <- read.table('image1.txt', header=F)
image2 <- read.table('image2.txt', header=F)
image3 <- read.table('image3.txt', header=F)

image1 <- tbl_df(image1)
image2 <- tbl_df(image2)
image3 <- tbl_df(image3)

# Add informative column names.
collabs <- c('y','x','label','NDAI','SD','CORR','DF','CF','BF','AF','AN')
#Df : AN are the camera angles, NDA, SD And CORR are the statistics caluculated using trig
#label is the expert label, need dimensionality reductio?  only 3 variables, so probably not...

names(image1) <- collabs
names(image2) <- collabs
names(image3) <- collabs

im1 <-ggplot(image1)
im2 <- ggplot(image2)
im3 <- ggplot(image3)

# Class conditional densities.

cond.den.AN <-   geom_density(aes(x=AN, group=factor(label), fill=factor(label)), alpha=0.5)
cond.den.NDAI <-   geom_density(aes(x=NDAI, group=factor(label), fill=factor(label)), alpha=0.5)
cond.den.CORR <-   geom_density(aes(x=CORR, group=factor(label), fill=factor(label)), alpha=0.5)
cond.den.SD <-   geom_density(aes(x=SD, group=factor(label), fill=factor(label)), alpha=0.5)

im1 + cond.den.AN
im2 + cond.den.AN
im3 + cond.den.AN

# Save these for latex

png("../figures/NDAI1.png")
im1 + cond.den.NDAI
dev.off()
png("../figures/NDAI2.png")
im2 + cond.den.NDAI
dev.off()
png("../figures/NDAI3.png")
im3 + cond.den.NDAI
dev.off()
png("../figures/CORR1.png")
im1 + cond.den.CORR
dev.off()
png("../figures/CORR2.png")
im2 + cond.den.CORR
dev.off()
png("../figures/CORR3.png")
im3 + cond.den.CORR
dev.off()
png("../figures/SD1.png")
im1 + cond.den.SD
dev.off()
png("../figures/SD2.png")
im2 + cond.den.SD
dev.off()
png("../figures/SD3.png")
im3 + cond.den.SD
dev.off()
